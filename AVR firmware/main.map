Archive member included because of file (symbol)

f:/WinAVR/lib/gcc/avr/3.4.6/avr5\libgcc.a(_udivmodqi4.o)
                              util.o (__udivmodqi4)
f:/WinAVR/lib/gcc/avr/3.4.6/avr5\libgcc.a(_udivmodhi4.o)
                              util.o (__udivmodhi4)
f:/WinAVR/lib/gcc/avr/3.4.6/avr5\libgcc.a(_udivmodsi4.o)
                              util.o (__udivmodsi4)
f:/WinAVR/lib/gcc/avr/3.4.6/avr5\libgcc.a(_prologue.o)
                              util.o (__prologue_saves__)
f:/WinAVR/lib/gcc/avr/3.4.6/avr5\libgcc.a(_epilogue.o)
                              util.o (__epilogue_restores__)
f:/WinAVR/lib/gcc/avr/3.4.6/avr5\libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
f:/WinAVR/lib/gcc/avr/3.4.6/avr5\libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5\libc.a(atoi.o)
                              commands.o (atoi)
f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5\libc.a(strcpy.o)
                              serial.o (strcpy)
f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5\libc.a(strncmp.o)
                              main.o (strncmp)
f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5\libc.a(mul10.o)
                              f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5\libc.a(atoi.o) (__mulhi_const_10)

Allocating common symbols
Common symbol       size              file

encoderY            0x4               encoders.o
prev_encoderX       0x4               encoders.o
distanceY           0x4               encoders.o
prev_encoderY       0x4               encoders.o
distanceX           0x4               encoders.o
velocityY           0x4               encoders.o
buffer              0x40              serial.o
velocityX           0x4               encoders.o
encoderX            0x4               encoders.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5/crtm16.o
LOAD main.o
LOAD commands.o
LOAD util.o
LOAD serial.o
LOAD encoders.o
LOAD pwm.o
LOAD f:/WinAVR/lib/gcc/avr/3.4.6/avr5\libgcc.a
LOAD f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5\libc.a
LOAD f:/WinAVR/lib/gcc/avr/3.4.6/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xb68
 *(.vectors)
 .vectors       0x00000000       0x54 f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
 *(.init0)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5/crtm16.o
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 f:/WinAVR/lib/gcc/avr/3.4.6/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 f:/WinAVR/lib/gcc/avr/3.4.6/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init5)
 *(.init6)
 *(.init7)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x4 f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5/crtm16.o
 *(.text)
 .text          0x0000008a        0x4 f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5/crtm16.o
                0x0000008a                __bad_interrupt
                0x0000008a                __vector_6
                0x0000008a                __vector_3
                0x0000008a                __vector_13
                0x0000008a                __vector_17
                0x0000008a                __vector_19
                0x0000008a                __vector_7
                0x0000008a                __vector_5
                0x0000008a                __vector_4
                0x0000008a                __vector_15
                0x0000008a                __vector_8
                0x0000008a                __vector_14
                0x0000008a                __vector_10
                0x0000008a                __vector_16
                0x0000008a                __vector_18
                0x0000008a                __vector_20
 .text          0x0000008e       0xe6 main.o
                0x0000008e                main
 .text          0x00000174      0x146 commands.o
                0x000001de                parse_XXX
                0x000001f4                parse_LMT
                0x0000021c                parse_RSN
                0x00000250                parse_ROD
                0x00000208                parse_RMT
                0x00000174                parse_RVL
 .text          0x000002ba      0x1fc util.o
                0x0000035a                usart_print_s32
                0x0000040c                usart_print_u8
                0x000002ba                usart_print_u32
                0x000003ea                usart_print_s16
                0x00000390                usart_print_u16
                0x00000488                hex_to_dec
 .text          0x000004b6      0x1f2 serial.o
                0x000004ca                usart_putch
                0x00000502                __vector_12
                0x00000610                usart_getch
                0x000005cc                __vector_11
                0x00000636                DataInReceiveBuffer
                0x0000057e                usart_puts
                0x000004b6                usart_init
                0x0000064e                usart_getline
 .text          0x000006a8      0x2a2 encoders.o
                0x00000762                __vector_1
                0x00000754                encoders_stop
                0x000006a8                encoders_init
                0x0000080e                __vector_9
                0x000007b8                __vector_2
 .text          0x0000094a       0x98 pwm.o
                0x000009a8                set_motorB
                0x0000096e                set_motorA
                0x0000094a                pwm_init
 .text          0x000009e2       0x5a f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5\libc.a(atoi.o)
                0x000009e2                atoi
 .text          0x00000a3c        0xe f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5\libc.a(strcpy.o)
                0x00000a3c                strcpy
 .text          0x00000a4a       0x1c f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5\libc.a(strncmp.o)
                0x00000a4a                strncmp
 .text          0x00000a66       0x10 f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5\libc.a(mul10.o)
                0x00000a66                __mulhi_const_10
                0x00000a76                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000a76       0x18 f:/WinAVR/lib/gcc/avr/3.4.6/avr5\libgcc.a(_udivmodqi4.o)
                0x00000a76                __udivmodqi4
 .text.libgcc   0x00000a8e       0x28 f:/WinAVR/lib/gcc/avr/3.4.6/avr5\libgcc.a(_udivmodhi4.o)
                0x00000a8e                __udivmodhi4
 .text.libgcc   0x00000ab6       0x44 f:/WinAVR/lib/gcc/avr/3.4.6/avr5\libgcc.a(_udivmodsi4.o)
                0x00000ab6                __udivmodsi4
 .text.libgcc   0x00000afa       0x38 f:/WinAVR/lib/gcc/avr/3.4.6/avr5\libgcc.a(_prologue.o)
                0x00000afa                __prologue_saves__
 .text.libgcc   0x00000b32       0x36 f:/WinAVR/lib/gcc/avr/3.4.6/avr5\libgcc.a(_epilogue.o)
                0x00000b32                __epilogue_restores__
                0x00000b68                . = ALIGN (0x2)
 *(.fini9)
 *(.fini8)
 *(.fini7)
 *(.fini6)
 *(.fini5)
 *(.fini4)
 *(.fini3)
 *(.fini2)
 *(.fini1)
 *(.fini0)
                0x00000b68                _etext = .

.data           0x00800060       0x36 load address 0x00000b68
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060       0x1d main.o
 .data          0x0080007d       0x18 commands.o
 *(.gnu.linkonce.d*)
                0x00800096                . = ALIGN (0x2)
 *fill*         0x00800095        0x1 00
                0x00800096                _edata = .
                0x00800096                PROVIDE (__data_end, .)

.bss            0x00800096      0x136
                0x00800096                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800096       0xd6 serial.o
                0x00800098                input_index
                0x00800096                output_index
 *(COMMON)
 COMMON         0x0080016c       0x40 serial.o
                0x0080016c                buffer
 COMMON         0x008001ac       0x20 encoders.o
                0x008001ac                encoderY
                0x008001b0                prev_encoderX
                0x008001b4                distanceY
                0x008001b8                prev_encoderY
                0x008001bc                distanceX
                0x008001c0                velocityY
                0x008001c4                velocityX
                0x008001c8                encoderX
                0x008001cc                PROVIDE (__bss_end, .)
                0x00000b68                __data_load_start = LOADADDR (.data)
                0x00000b9e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008001cc        0x0
                0x008001cc                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008001cc                PROVIDE (__noinit_end, .)
                0x008001cc                _end = .
                0x008001cc                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab           0x00000000      0x36c
 *(.stab)
 .stab          0x00000000      0x36c f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5/crtm16.o

.stabstr        0x00000000       0x84
 *(.stabstr)
 .stabstr       0x00000000       0x84 f:/WinAVR/bin/../lib/gcc/avr/3.4.6/../../../../avr/lib/avr5/crtm16.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x78
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x14 main.o
 .debug_aranges
                0x00000014       0x14 commands.o
 .debug_aranges
                0x00000028       0x14 util.o
 .debug_aranges
                0x0000003c       0x14 serial.o
 .debug_aranges
                0x00000050       0x14 encoders.o
 .debug_aranges
                0x00000064       0x14 pwm.o

.debug_pubnames
                0x00000000      0x2e1
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1b main.o
 .debug_pubnames
                0x0000001b       0x66 commands.o
 .debug_pubnames
                0x00000081       0x84 util.o
 .debug_pubnames
                0x00000105       0xc6 serial.o
 .debug_pubnames
                0x000001cb       0xd9 encoders.o
 .debug_pubnames
                0x000002a4       0x3d pwm.o

.debug_info     0x00000000      0x952
 *(.debug_info)
 .debug_info    0x00000000       0xa3 main.o
 .debug_info    0x000000a3      0x224 commands.o
 .debug_info    0x000002c7      0x20b util.o
 .debug_info    0x000004d2      0x27c serial.o
 .debug_info    0x0000074e      0x148 encoders.o
 .debug_info    0x00000896       0xbc pwm.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x345
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x64 main.o
 .debug_abbrev  0x00000064       0x8d commands.o
 .debug_abbrev  0x000000f1       0x97 util.o
 .debug_abbrev  0x00000188       0xf3 serial.o
 .debug_abbrev  0x0000027b       0x50 encoders.o
 .debug_abbrev  0x000002cb       0x7a pwm.o

.debug_line     0x00000000      0x8ad
 *(.debug_line)
 .debug_line    0x00000000      0x127 main.o
 .debug_line    0x00000127      0x197 commands.o
 .debug_line    0x000002be      0x1a4 util.o
 .debug_line    0x00000462      0x1e9 serial.o
 .debug_line    0x0000064b      0x130 encoders.o
 .debug_line    0x0000077b      0x132 pwm.o

.debug_frame
 *(.debug_frame)

.debug_str      0x00000000      0x2fe
 *(.debug_str)
 .debug_str     0x00000000       0x72 main.o
                                 0xb0 (size before relaxing)
 .debug_str     0x00000072       0x83 commands.o
                                0x127 (size before relaxing)
 .debug_str     0x000000f5       0x8e util.o
                                0x12d (size before relaxing)
 .debug_str     0x00000183       0xe0 serial.o
                                0x18b (size before relaxing)
 .debug_str     0x00000263       0x64 encoders.o
                                0x138 (size before relaxing)
 .debug_str     0x000002c7       0x37 pwm.o
                                 0xd1 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.out elf32-avr)
